/****************************************************************************
** Meta object code from reading C++ file 'dialogCsv.h'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.7.0)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include "dialogCsv.h"
#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'dialogCsv.h' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.7.0. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
struct qt_meta_stringdata_dialogCsvImportHeaderView_t {
    QByteArrayData data[6];
    char stringdata0[85];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_dialogCsvImportHeaderView_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_dialogCsvImportHeaderView_t qt_meta_stringdata_dialogCsvImportHeaderView = {
    {
QT_MOC_LITERAL(0, 0, 25), // "dialogCsvImportHeaderView"
QT_MOC_LITERAL(1, 26, 14), // "onSectionMoved"
QT_MOC_LITERAL(2, 41, 0), // ""
QT_MOC_LITERAL(3, 42, 12), // "logicalIndex"
QT_MOC_LITERAL(4, 55, 14), // "oldVisualIndex"
QT_MOC_LITERAL(5, 70, 14) // "newVisualIndex"

    },
    "dialogCsvImportHeaderView\0onSectionMoved\0"
    "\0logicalIndex\0oldVisualIndex\0"
    "newVisualIndex"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_dialogCsvImportHeaderView[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       1,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    3,   19,    2, 0x0a /* Public */,

 // slots: parameters
    QMetaType::Void, QMetaType::Int, QMetaType::Int, QMetaType::Int,    3,    4,    5,

       0        // eod
};

void dialogCsvImportHeaderView::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        dialogCsvImportHeaderView *_t = static_cast<dialogCsvImportHeaderView *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->onSectionMoved((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< int(*)>(_a[2])),(*reinterpret_cast< int(*)>(_a[3]))); break;
        default: ;
        }
    }
}

const QMetaObject dialogCsvImportHeaderView::staticMetaObject = {
    { &QHeaderView::staticMetaObject, qt_meta_stringdata_dialogCsvImportHeaderView.data,
      qt_meta_data_dialogCsvImportHeaderView,  qt_static_metacall, Q_NULLPTR, Q_NULLPTR}
};


const QMetaObject *dialogCsvImportHeaderView::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *dialogCsvImportHeaderView::qt_metacast(const char *_clname)
{
    if (!_clname) return Q_NULLPTR;
    if (!strcmp(_clname, qt_meta_stringdata_dialogCsvImportHeaderView.stringdata0))
        return static_cast<void*>(const_cast< dialogCsvImportHeaderView*>(this));
    return QHeaderView::qt_metacast(_clname);
}

int dialogCsvImportHeaderView::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QHeaderView::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 1)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 1;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 1)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 1;
    }
    return _id;
}
struct qt_meta_stringdata_dialogCsvImport_t {
    QByteArrayData data[22];
    char stringdata0[370];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_dialogCsvImport_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_dialogCsvImport_t qt_meta_stringdata_dialogCsvImport = {
    {
QT_MOC_LITERAL(0, 0, 15), // "dialogCsvImport"
QT_MOC_LITERAL(1, 16, 9), // "okClicked"
QT_MOC_LITERAL(2, 26, 0), // ""
QT_MOC_LITERAL(3, 27, 13), // "cancelClicked"
QT_MOC_LITERAL(4, 41, 14), // "refreshClicked"
QT_MOC_LITERAL(5, 56, 13), // "onCsvSepField"
QT_MOC_LITERAL(6, 70, 12), // "oncsvSepText"
QT_MOC_LITERAL(7, 83, 17), // "ctxMenuColDispoUp"
QT_MOC_LITERAL(8, 101, 3), // "pos"
QT_MOC_LITERAL(9, 105, 23), // "ctxMenuWidgetSampleData"
QT_MOC_LITERAL(10, 129, 11), // "onSetDefcol"
QT_MOC_LITERAL(11, 141, 8), // "QAction*"
QT_MOC_LITERAL(12, 150, 18), // "colCsvColSelectAll"
QT_MOC_LITERAL(13, 169, 20), // "colCsvColunSelectAll"
QT_MOC_LITERAL(14, 190, 25), // "colCsvColSelectCurrentCol"
QT_MOC_LITERAL(15, 216, 31), // "onCellEditedTableWidgetColDispo"
QT_MOC_LITERAL(16, 248, 34), // "displayTableWidgetSampleDataH..."
QT_MOC_LITERAL(17, 283, 23), // "onFistLineIsHeaderCheck"
QT_MOC_LITERAL(18, 307, 20), // "doSelectByCurrentcol"
QT_MOC_LITERAL(19, 328, 8), // "idSetcol"
QT_MOC_LITERAL(20, 337, 16), // "colCsvColToRight"
QT_MOC_LITERAL(21, 354, 15) // "colCsvColToLeft"

    },
    "dialogCsvImport\0okClicked\0\0cancelClicked\0"
    "refreshClicked\0onCsvSepField\0oncsvSepText\0"
    "ctxMenuColDispoUp\0pos\0ctxMenuWidgetSampleData\0"
    "onSetDefcol\0QAction*\0colCsvColSelectAll\0"
    "colCsvColunSelectAll\0colCsvColSelectCurrentCol\0"
    "onCellEditedTableWidgetColDispo\0"
    "displayTableWidgetSampleDataHeader\0"
    "onFistLineIsHeaderCheck\0doSelectByCurrentcol\0"
    "idSetcol\0colCsvColToRight\0colCsvColToLeft"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_dialogCsvImport[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
      17,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,   99,    2, 0x0a /* Public */,
       3,    0,  100,    2, 0x0a /* Public */,
       4,    0,  101,    2, 0x0a /* Public */,
       5,    1,  102,    2, 0x0a /* Public */,
       6,    1,  105,    2, 0x0a /* Public */,
       7,    1,  108,    2, 0x0a /* Public */,
       9,    1,  111,    2, 0x0a /* Public */,
      10,    1,  114,    2, 0x0a /* Public */,
      12,    0,  117,    2, 0x0a /* Public */,
      13,    0,  118,    2, 0x0a /* Public */,
      14,    0,  119,    2, 0x0a /* Public */,
      15,    2,  120,    2, 0x0a /* Public */,
      16,    0,  125,    2, 0x0a /* Public */,
      17,    1,  126,    2, 0x0a /* Public */,
      18,    1,  129,    2, 0x0a /* Public */,
      20,    0,  132,    2, 0x0a /* Public */,
      21,    0,  133,    2, 0x0a /* Public */,

 // slots: parameters
    QMetaType::Bool,
    QMetaType::Bool,
    QMetaType::Void,
    QMetaType::Void, QMetaType::QString,    2,
    QMetaType::Void, QMetaType::QString,    2,
    QMetaType::Void, QMetaType::QPoint,    8,
    QMetaType::Void, QMetaType::QPoint,    8,
    QMetaType::Void, 0x80000000 | 11,    2,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void, QMetaType::Int, QMetaType::Int,    2,    2,
    QMetaType::Int,
    QMetaType::Void, QMetaType::Bool,    2,
    QMetaType::Void, QMetaType::Int,   19,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void dialogCsvImport::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        dialogCsvImport *_t = static_cast<dialogCsvImport *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: { bool _r = _t->okClicked();
            if (_a[0]) *reinterpret_cast< bool*>(_a[0]) = _r; }  break;
        case 1: { bool _r = _t->cancelClicked();
            if (_a[0]) *reinterpret_cast< bool*>(_a[0]) = _r; }  break;
        case 2: _t->refreshClicked(); break;
        case 3: _t->onCsvSepField((*reinterpret_cast< const QString(*)>(_a[1]))); break;
        case 4: _t->oncsvSepText((*reinterpret_cast< const QString(*)>(_a[1]))); break;
        case 5: _t->ctxMenuColDispoUp((*reinterpret_cast< const QPoint(*)>(_a[1]))); break;
        case 6: _t->ctxMenuWidgetSampleData((*reinterpret_cast< const QPoint(*)>(_a[1]))); break;
        case 7: _t->onSetDefcol((*reinterpret_cast< QAction*(*)>(_a[1]))); break;
        case 8: _t->colCsvColSelectAll(); break;
        case 9: _t->colCsvColunSelectAll(); break;
        case 10: _t->colCsvColSelectCurrentCol(); break;
        case 11: _t->onCellEditedTableWidgetColDispo((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< int(*)>(_a[2]))); break;
        case 12: { int _r = _t->displayTableWidgetSampleDataHeader();
            if (_a[0]) *reinterpret_cast< int*>(_a[0]) = _r; }  break;
        case 13: _t->onFistLineIsHeaderCheck((*reinterpret_cast< bool(*)>(_a[1]))); break;
        case 14: _t->doSelectByCurrentcol((*reinterpret_cast< int(*)>(_a[1]))); break;
        case 15: _t->colCsvColToRight(); break;
        case 16: _t->colCsvColToLeft(); break;
        default: ;
        }
    }
}

const QMetaObject dialogCsvImport::staticMetaObject = {
    { &QDialog::staticMetaObject, qt_meta_stringdata_dialogCsvImport.data,
      qt_meta_data_dialogCsvImport,  qt_static_metacall, Q_NULLPTR, Q_NULLPTR}
};


const QMetaObject *dialogCsvImport::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *dialogCsvImport::qt_metacast(const char *_clname)
{
    if (!_clname) return Q_NULLPTR;
    if (!strcmp(_clname, qt_meta_stringdata_dialogCsvImport.stringdata0))
        return static_cast<void*>(const_cast< dialogCsvImport*>(this));
    return QDialog::qt_metacast(_clname);
}

int dialogCsvImport::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QDialog::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 17)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 17;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 17)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 17;
    }
    return _id;
}
struct qt_meta_stringdata_dialogCsvExportHeaderView_t {
    QByteArrayData data[6];
    char stringdata0[85];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_dialogCsvExportHeaderView_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_dialogCsvExportHeaderView_t qt_meta_stringdata_dialogCsvExportHeaderView = {
    {
QT_MOC_LITERAL(0, 0, 25), // "dialogCsvExportHeaderView"
QT_MOC_LITERAL(1, 26, 14), // "onSectionMoved"
QT_MOC_LITERAL(2, 41, 0), // ""
QT_MOC_LITERAL(3, 42, 12), // "logicalIndex"
QT_MOC_LITERAL(4, 55, 14), // "oldVisualIndex"
QT_MOC_LITERAL(5, 70, 14) // "newVisualIndex"

    },
    "dialogCsvExportHeaderView\0onSectionMoved\0"
    "\0logicalIndex\0oldVisualIndex\0"
    "newVisualIndex"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_dialogCsvExportHeaderView[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       1,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    3,   19,    2, 0x0a /* Public */,

 // slots: parameters
    QMetaType::Void, QMetaType::Int, QMetaType::Int, QMetaType::Int,    3,    4,    5,

       0        // eod
};

void dialogCsvExportHeaderView::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        dialogCsvExportHeaderView *_t = static_cast<dialogCsvExportHeaderView *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->onSectionMoved((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< int(*)>(_a[2])),(*reinterpret_cast< int(*)>(_a[3]))); break;
        default: ;
        }
    }
}

const QMetaObject dialogCsvExportHeaderView::staticMetaObject = {
    { &QHeaderView::staticMetaObject, qt_meta_stringdata_dialogCsvExportHeaderView.data,
      qt_meta_data_dialogCsvExportHeaderView,  qt_static_metacall, Q_NULLPTR, Q_NULLPTR}
};


const QMetaObject *dialogCsvExportHeaderView::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *dialogCsvExportHeaderView::qt_metacast(const char *_clname)
{
    if (!_clname) return Q_NULLPTR;
    if (!strcmp(_clname, qt_meta_stringdata_dialogCsvExportHeaderView.stringdata0))
        return static_cast<void*>(const_cast< dialogCsvExportHeaderView*>(this));
    return QHeaderView::qt_metacast(_clname);
}

int dialogCsvExportHeaderView::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QHeaderView::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 1)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 1;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 1)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 1;
    }
    return _id;
}
struct qt_meta_stringdata_dialogCsvExport_t {
    QByteArrayData data[22];
    char stringdata0[370];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_dialogCsvExport_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_dialogCsvExport_t qt_meta_stringdata_dialogCsvExport = {
    {
QT_MOC_LITERAL(0, 0, 15), // "dialogCsvExport"
QT_MOC_LITERAL(1, 16, 9), // "okClicked"
QT_MOC_LITERAL(2, 26, 0), // ""
QT_MOC_LITERAL(3, 27, 13), // "cancelClicked"
QT_MOC_LITERAL(4, 41, 14), // "refreshClicked"
QT_MOC_LITERAL(5, 56, 13), // "onCsvSepField"
QT_MOC_LITERAL(6, 70, 12), // "oncsvSepText"
QT_MOC_LITERAL(7, 83, 17), // "ctxMenuColDispoUp"
QT_MOC_LITERAL(8, 101, 3), // "pos"
QT_MOC_LITERAL(9, 105, 23), // "ctxMenuWidgetSampleData"
QT_MOC_LITERAL(10, 129, 11), // "onSetDefcol"
QT_MOC_LITERAL(11, 141, 8), // "QAction*"
QT_MOC_LITERAL(12, 150, 18), // "colCsvColSelectAll"
QT_MOC_LITERAL(13, 169, 20), // "colCsvColunSelectAll"
QT_MOC_LITERAL(14, 190, 25), // "colCsvColSelectCurrentCol"
QT_MOC_LITERAL(15, 216, 31), // "onCellEditedTableWidgetColDispo"
QT_MOC_LITERAL(16, 248, 34), // "displayTableWidgetSampleDataH..."
QT_MOC_LITERAL(17, 283, 23), // "onFistLineIsHeaderCheck"
QT_MOC_LITERAL(18, 307, 20), // "doSelectByCurrentcol"
QT_MOC_LITERAL(19, 328, 8), // "idSetcol"
QT_MOC_LITERAL(20, 337, 16), // "colCsvColToRight"
QT_MOC_LITERAL(21, 354, 15) // "colCsvColToLeft"

    },
    "dialogCsvExport\0okClicked\0\0cancelClicked\0"
    "refreshClicked\0onCsvSepField\0oncsvSepText\0"
    "ctxMenuColDispoUp\0pos\0ctxMenuWidgetSampleData\0"
    "onSetDefcol\0QAction*\0colCsvColSelectAll\0"
    "colCsvColunSelectAll\0colCsvColSelectCurrentCol\0"
    "onCellEditedTableWidgetColDispo\0"
    "displayTableWidgetSampleDataHeader\0"
    "onFistLineIsHeaderCheck\0doSelectByCurrentcol\0"
    "idSetcol\0colCsvColToRight\0colCsvColToLeft"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_dialogCsvExport[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
      17,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,   99,    2, 0x0a /* Public */,
       3,    0,  100,    2, 0x0a /* Public */,
       4,    0,  101,    2, 0x0a /* Public */,
       5,    1,  102,    2, 0x0a /* Public */,
       6,    1,  105,    2, 0x0a /* Public */,
       7,    1,  108,    2, 0x0a /* Public */,
       9,    1,  111,    2, 0x0a /* Public */,
      10,    1,  114,    2, 0x0a /* Public */,
      12,    0,  117,    2, 0x0a /* Public */,
      13,    0,  118,    2, 0x0a /* Public */,
      14,    0,  119,    2, 0x0a /* Public */,
      15,    2,  120,    2, 0x0a /* Public */,
      16,    0,  125,    2, 0x0a /* Public */,
      17,    1,  126,    2, 0x0a /* Public */,
      18,    1,  129,    2, 0x0a /* Public */,
      20,    0,  132,    2, 0x0a /* Public */,
      21,    0,  133,    2, 0x0a /* Public */,

 // slots: parameters
    QMetaType::Bool,
    QMetaType::Bool,
    QMetaType::Void,
    QMetaType::Void, QMetaType::QString,    2,
    QMetaType::Void, QMetaType::QString,    2,
    QMetaType::Void, QMetaType::QPoint,    8,
    QMetaType::Void, QMetaType::QPoint,    8,
    QMetaType::Void, 0x80000000 | 11,    2,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void, QMetaType::Int, QMetaType::Int,    2,    2,
    QMetaType::Int,
    QMetaType::Void, QMetaType::Bool,    2,
    QMetaType::Void, QMetaType::Int,   19,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void dialogCsvExport::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        dialogCsvExport *_t = static_cast<dialogCsvExport *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: { bool _r = _t->okClicked();
            if (_a[0]) *reinterpret_cast< bool*>(_a[0]) = _r; }  break;
        case 1: { bool _r = _t->cancelClicked();
            if (_a[0]) *reinterpret_cast< bool*>(_a[0]) = _r; }  break;
        case 2: _t->refreshClicked(); break;
        case 3: _t->onCsvSepField((*reinterpret_cast< const QString(*)>(_a[1]))); break;
        case 4: _t->oncsvSepText((*reinterpret_cast< const QString(*)>(_a[1]))); break;
        case 5: _t->ctxMenuColDispoUp((*reinterpret_cast< const QPoint(*)>(_a[1]))); break;
        case 6: _t->ctxMenuWidgetSampleData((*reinterpret_cast< const QPoint(*)>(_a[1]))); break;
        case 7: _t->onSetDefcol((*reinterpret_cast< QAction*(*)>(_a[1]))); break;
        case 8: _t->colCsvColSelectAll(); break;
        case 9: _t->colCsvColunSelectAll(); break;
        case 10: _t->colCsvColSelectCurrentCol(); break;
        case 11: _t->onCellEditedTableWidgetColDispo((*reinterpret_cast< int(*)>(_a[1])),(*reinterpret_cast< int(*)>(_a[2]))); break;
        case 12: { int _r = _t->displayTableWidgetSampleDataHeader();
            if (_a[0]) *reinterpret_cast< int*>(_a[0]) = _r; }  break;
        case 13: _t->onFistLineIsHeaderCheck((*reinterpret_cast< bool(*)>(_a[1]))); break;
        case 14: _t->doSelectByCurrentcol((*reinterpret_cast< int(*)>(_a[1]))); break;
        case 15: _t->colCsvColToRight(); break;
        case 16: _t->colCsvColToLeft(); break;
        default: ;
        }
    }
}

const QMetaObject dialogCsvExport::staticMetaObject = {
    { &QDialog::staticMetaObject, qt_meta_stringdata_dialogCsvExport.data,
      qt_meta_data_dialogCsvExport,  qt_static_metacall, Q_NULLPTR, Q_NULLPTR}
};


const QMetaObject *dialogCsvExport::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *dialogCsvExport::qt_metacast(const char *_clname)
{
    if (!_clname) return Q_NULLPTR;
    if (!strcmp(_clname, qt_meta_stringdata_dialogCsvExport.stringdata0))
        return static_cast<void*>(const_cast< dialogCsvExport*>(this));
    return QDialog::qt_metacast(_clname);
}

int dialogCsvExport::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QDialog::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 17)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 17;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 17)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 17;
    }
    return _id;
}
QT_END_MOC_NAMESPACE
