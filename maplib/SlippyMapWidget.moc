/****************************************************************************
** Meta object code from reading C++ file 'SlippyMapWidget.h'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.7.0)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include "SlippyMapWidget.h"
#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'SlippyMapWidget.h' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.7.0. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
struct qt_meta_stringdata_SlippyMapWidget_t {
    QByteArrayData data[48];
    char stringdata0[615];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_SlippyMapWidget_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_SlippyMapWidget_t qt_meta_stringdata_SlippyMapWidget = {
    {
QT_MOC_LITERAL(0, 0, 15), // "SlippyMapWidget"
QT_MOC_LITERAL(1, 16, 8), // "position"
QT_MOC_LITERAL(2, 25, 0), // ""
QT_MOC_LITERAL(3, 26, 6), // "lonLat"
QT_MOC_LITERAL(4, 33, 6), // "setMap"
QT_MOC_LITERAL(5, 40, 4), // "path"
QT_MOC_LITERAL(6, 45, 9), // "copyright"
QT_MOC_LITERAL(7, 55, 7), // "minZoom"
QT_MOC_LITERAL(8, 63, 7), // "maxZoom"
QT_MOC_LITERAL(9, 71, 9), // "userAgent"
QT_MOC_LITERAL(10, 81, 7), // "referer"
QT_MOC_LITERAL(11, 89, 11), // "keyShortCut"
QT_MOC_LITERAL(12, 101, 7), // "keyZoom"
QT_MOC_LITERAL(13, 109, 6), // "render"
QT_MOC_LITERAL(14, 116, 9), // "QPainter*"
QT_MOC_LITERAL(15, 126, 7), // "painter"
QT_MOC_LITERAL(16, 134, 10), // "marginLeft"
QT_MOC_LITERAL(17, 145, 9), // "marginTop"
QT_MOC_LITERAL(18, 155, 11), // "marginRight"
QT_MOC_LITERAL(19, 167, 12), // "marginBottom"
QT_MOC_LITERAL(20, 180, 17), // "printerResolution"
QT_MOC_LITERAL(21, 198, 11), // "scaleFactor"
QT_MOC_LITERAL(22, 210, 8), // "scaleLen"
QT_MOC_LITERAL(23, 219, 7), // "mapZoom"
QT_MOC_LITERAL(24, 227, 14), // "drawTileBorder"
QT_MOC_LITERAL(25, 242, 10), // "pageWpixel"
QT_MOC_LITERAL(26, 253, 10), // "pageHpixel"
QT_MOC_LITERAL(27, 264, 9), // "mapBorder"
QT_MOC_LITERAL(28, 274, 9), // "modeDebug"
QT_MOC_LITERAL(29, 284, 21), // "onMapActionCenterHere"
QT_MOC_LITERAL(30, 306, 22), // "onMapActionZoomOutHere"
QT_MOC_LITERAL(31, 329, 21), // "onMapActionZoomInHere"
QT_MOC_LITERAL(32, 351, 22), // "onMapActionZoomInLower"
QT_MOC_LITERAL(33, 374, 22), // "onMapActionZoomInUpper"
QT_MOC_LITERAL(34, 397, 16), // "onMapNewWaypoint"
QT_MOC_LITERAL(35, 414, 17), // "onMapEditWaypoint"
QT_MOC_LITERAL(36, 432, 18), // "onMapActionCopyWpt"
QT_MOC_LITERAL(37, 451, 23), // "onMapActionPasteWptHere"
QT_MOC_LITERAL(38, 475, 18), // "onContextMenuClose"
QT_MOC_LITERAL(39, 494, 23), // "onMapActionCopyWptCoord"
QT_MOC_LITERAL(40, 518, 25), // "onMapActionSearchInternet"
QT_MOC_LITERAL(41, 544, 15), // "ShowContextMenu"
QT_MOC_LITERAL(42, 560, 3), // "pos"
QT_MOC_LITERAL(43, 564, 20), // "contextMenuEventHide"
QT_MOC_LITERAL(44, 585, 11), // "eventFilter"
QT_MOC_LITERAL(45, 597, 3), // "obj"
QT_MOC_LITERAL(46, 601, 7), // "QEvent*"
QT_MOC_LITERAL(47, 609, 5) // "event"

    },
    "SlippyMapWidget\0position\0\0lonLat\0"
    "setMap\0path\0copyright\0minZoom\0maxZoom\0"
    "userAgent\0referer\0keyShortCut\0keyZoom\0"
    "render\0QPainter*\0painter\0marginLeft\0"
    "marginTop\0marginRight\0marginBottom\0"
    "printerResolution\0scaleFactor\0scaleLen\0"
    "mapZoom\0drawTileBorder\0pageWpixel\0"
    "pageHpixel\0mapBorder\0modeDebug\0"
    "onMapActionCenterHere\0onMapActionZoomOutHere\0"
    "onMapActionZoomInHere\0onMapActionZoomInLower\0"
    "onMapActionZoomInUpper\0onMapNewWaypoint\0"
    "onMapEditWaypoint\0onMapActionCopyWpt\0"
    "onMapActionPasteWptHere\0onContextMenuClose\0"
    "onMapActionCopyWptCoord\0"
    "onMapActionSearchInternet\0ShowContextMenu\0"
    "pos\0contextMenuEventHide\0eventFilter\0"
    "obj\0QEvent*\0event"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_SlippyMapWidget[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
      18,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       1,       // signalCount

 // signals: name, argc, parameters, tag, flags
       1,    1,  104,    2, 0x06 /* Public */,

 // slots: name, argc, parameters, tag, flags
       4,    8,  107,    2, 0x0a /* Public */,
      13,   14,  124,    2, 0x0a /* Public */,
      29,    0,  153,    2, 0x08 /* Private */,
      30,    0,  154,    2, 0x08 /* Private */,
      31,    0,  155,    2, 0x08 /* Private */,
      32,    0,  156,    2, 0x08 /* Private */,
      33,    0,  157,    2, 0x08 /* Private */,
      34,    0,  158,    2, 0x08 /* Private */,
      35,    0,  159,    2, 0x08 /* Private */,
      36,    0,  160,    2, 0x08 /* Private */,
      37,    0,  161,    2, 0x08 /* Private */,
      38,    0,  162,    2, 0x08 /* Private */,
      39,    0,  163,    2, 0x08 /* Private */,
      40,    0,  164,    2, 0x08 /* Private */,
      41,    1,  165,    2, 0x08 /* Private */,
      43,    0,  168,    2, 0x08 /* Private */,
      44,    2,  169,    2, 0x08 /* Private */,

 // signals: parameters
    QMetaType::Void, QMetaType::QPointF,    3,

 // slots: parameters
    QMetaType::Void, QMetaType::QString, QMetaType::QString, QMetaType::Int, QMetaType::Int, QMetaType::QString, QMetaType::QString, QMetaType::Int, QMetaType::Int,    5,    6,    7,    8,    9,   10,   11,   12,
    QMetaType::Void, 0x80000000 | 14, QMetaType::QReal, QMetaType::QReal, QMetaType::QReal, QMetaType::QReal, QMetaType::Int, QMetaType::Int, QMetaType::Double, QMetaType::Double, QMetaType::Bool, QMetaType::Int, QMetaType::Int, QMetaType::QRectF, QMetaType::Bool,   15,   16,   17,   18,   19,   20,   21,   22,   23,   24,   25,   26,   27,   28,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void, QMetaType::QPoint,   42,
    QMetaType::Void,
    QMetaType::Bool, QMetaType::QObjectStar, 0x80000000 | 46,   45,   47,

       0        // eod
};

void SlippyMapWidget::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        SlippyMapWidget *_t = static_cast<SlippyMapWidget *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->position((*reinterpret_cast< const QPointF(*)>(_a[1]))); break;
        case 1: _t->setMap((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])),(*reinterpret_cast< int(*)>(_a[3])),(*reinterpret_cast< int(*)>(_a[4])),(*reinterpret_cast< const QString(*)>(_a[5])),(*reinterpret_cast< const QString(*)>(_a[6])),(*reinterpret_cast< int(*)>(_a[7])),(*reinterpret_cast< int(*)>(_a[8]))); break;
        case 2: _t->render((*reinterpret_cast< QPainter*(*)>(_a[1])),(*reinterpret_cast< qreal(*)>(_a[2])),(*reinterpret_cast< qreal(*)>(_a[3])),(*reinterpret_cast< qreal(*)>(_a[4])),(*reinterpret_cast< qreal(*)>(_a[5])),(*reinterpret_cast< int(*)>(_a[6])),(*reinterpret_cast< int(*)>(_a[7])),(*reinterpret_cast< double(*)>(_a[8])),(*reinterpret_cast< double(*)>(_a[9])),(*reinterpret_cast< bool(*)>(_a[10])),(*reinterpret_cast< int(*)>(_a[11])),(*reinterpret_cast< int(*)>(_a[12])),(*reinterpret_cast< QRectF(*)>(_a[13])),(*reinterpret_cast< bool(*)>(_a[14]))); break;
        case 3: _t->onMapActionCenterHere(); break;
        case 4: _t->onMapActionZoomOutHere(); break;
        case 5: _t->onMapActionZoomInHere(); break;
        case 6: _t->onMapActionZoomInLower(); break;
        case 7: _t->onMapActionZoomInUpper(); break;
        case 8: _t->onMapNewWaypoint(); break;
        case 9: _t->onMapEditWaypoint(); break;
        case 10: _t->onMapActionCopyWpt(); break;
        case 11: _t->onMapActionPasteWptHere(); break;
        case 12: _t->onContextMenuClose(); break;
        case 13: _t->onMapActionCopyWptCoord(); break;
        case 14: _t->onMapActionSearchInternet(); break;
        case 15: _t->ShowContextMenu((*reinterpret_cast< const QPoint(*)>(_a[1]))); break;
        case 16: _t->contextMenuEventHide(); break;
        case 17: { bool _r = _t->eventFilter((*reinterpret_cast< QObject*(*)>(_a[1])),(*reinterpret_cast< QEvent*(*)>(_a[2])));
            if (_a[0]) *reinterpret_cast< bool*>(_a[0]) = _r; }  break;
        default: ;
        }
    } else if (_c == QMetaObject::IndexOfMethod) {
        int *result = reinterpret_cast<int *>(_a[0]);
        void **func = reinterpret_cast<void **>(_a[1]);
        {
            typedef void (SlippyMapWidget::*_t)(const QPointF & );
            if (*reinterpret_cast<_t *>(func) == static_cast<_t>(&SlippyMapWidget::position)) {
                *result = 0;
                return;
            }
        }
    }
}

const QMetaObject SlippyMapWidget::staticMetaObject = {
    { &QWidget::staticMetaObject, qt_meta_stringdata_SlippyMapWidget.data,
      qt_meta_data_SlippyMapWidget,  qt_static_metacall, Q_NULLPTR, Q_NULLPTR}
};


const QMetaObject *SlippyMapWidget::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *SlippyMapWidget::qt_metacast(const char *_clname)
{
    if (!_clname) return Q_NULLPTR;
    if (!strcmp(_clname, qt_meta_stringdata_SlippyMapWidget.stringdata0))
        return static_cast<void*>(const_cast< SlippyMapWidget*>(this));
    return QWidget::qt_metacast(_clname);
}

int SlippyMapWidget::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QWidget::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 18)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 18;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 18)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 18;
    }
    return _id;
}

// SIGNAL 0
void SlippyMapWidget::position(const QPointF & _t1)
{
    void *_a[] = { Q_NULLPTR, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 0, _a);
}
struct qt_meta_stringdata_SlippyMapPart_t {
    QByteArrayData data[1];
    char stringdata0[14];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_SlippyMapPart_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_SlippyMapPart_t qt_meta_stringdata_SlippyMapPart = {
    {
QT_MOC_LITERAL(0, 0, 13) // "SlippyMapPart"

    },
    "SlippyMapPart"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_SlippyMapPart[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       0,    0, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

       0        // eod
};

void SlippyMapPart::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    Q_UNUSED(_o);
    Q_UNUSED(_id);
    Q_UNUSED(_c);
    Q_UNUSED(_a);
}

const QMetaObject SlippyMapPart::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_SlippyMapPart.data,
      qt_meta_data_SlippyMapPart,  qt_static_metacall, Q_NULLPTR, Q_NULLPTR}
};


const QMetaObject *SlippyMapPart::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *SlippyMapPart::qt_metacast(const char *_clname)
{
    if (!_clname) return Q_NULLPTR;
    if (!strcmp(_clname, qt_meta_stringdata_SlippyMapPart.stringdata0))
        return static_cast<void*>(const_cast< SlippyMapPart*>(this));
    return QObject::qt_metacast(_clname);
}

int SlippyMapPart::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    return _id;
}
struct qt_meta_stringdata_SlippyMapTiled_t {
    QByteArrayData data[3];
    char stringdata0[29];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_SlippyMapTiled_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_SlippyMapTiled_t qt_meta_stringdata_SlippyMapTiled = {
    {
QT_MOC_LITERAL(0, 0, 14), // "SlippyMapTiled"
QT_MOC_LITERAL(1, 15, 12), // "slotFinished"
QT_MOC_LITERAL(2, 28, 0) // ""

    },
    "SlippyMapTiled\0slotFinished\0"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_SlippyMapTiled[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       1,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,   19,    2, 0x08 /* Private */,

 // slots: parameters
    QMetaType::Void,

       0        // eod
};

void SlippyMapTiled::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        SlippyMapTiled *_t = static_cast<SlippyMapTiled *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->slotFinished(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject SlippyMapTiled::staticMetaObject = {
    { &SlippyMapPart::staticMetaObject, qt_meta_stringdata_SlippyMapTiled.data,
      qt_meta_data_SlippyMapTiled,  qt_static_metacall, Q_NULLPTR, Q_NULLPTR}
};


const QMetaObject *SlippyMapTiled::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *SlippyMapTiled::qt_metacast(const char *_clname)
{
    if (!_clname) return Q_NULLPTR;
    if (!strcmp(_clname, qt_meta_stringdata_SlippyMapTiled.stringdata0))
        return static_cast<void*>(const_cast< SlippyMapTiled*>(this));
    return SlippyMapPart::qt_metacast(_clname);
}

int SlippyMapTiled::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = SlippyMapPart::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 1)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 1;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 1)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 1;
    }
    return _id;
}
QT_END_MOC_NAMESPACE
